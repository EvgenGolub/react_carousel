{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","animDur","frameSize","itemWidth","infinite","currentImage","setCurrentImage","imagesLeft","length","prevDisabled","nextDisabled","className","style","width","transition","map","image","i","transform","src","alt","type","onClick","disabled","DEFAULT_VALUES","App","useState","setItemWidth","setFrameSize","setStep","setAnimDur","setInfinite","htmlFor","id","value","min","max","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ce6ac57.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  animDur: number;\n  frameSize: number;\n  itemWidth: number;\n  infinite: boolean\n  currentImage: number;\n  setCurrentImage: (value: number) => void;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  animDur,\n  frameSize,\n  itemWidth,\n  infinite,\n  currentImage,\n  setCurrentImage,\n}) => {\n  const imagesLeft = images.length - frameSize;\n\n  function goPrev() {\n    return (\n      currentImage !== 0\n        ? setCurrentImage(currentImage - step >= 0 ? currentImage - step : 0)\n        : setCurrentImage(imagesLeft)\n    );\n  }\n\n  function goNext() {\n    return (\n      currentImage !== imagesLeft\n        ? setCurrentImage(\n          currentImage + step <= imagesLeft ? currentImage + step : imagesLeft,\n        )\n        : setCurrentImage(0)\n    );\n  }\n\n  const prevDisabled = (currentImage === 0) && !infinite;\n  const nextDisabled = (currentImage === imagesLeft) && !infinite;\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n        transition: `${animDur}ms`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, i) => (\n          <li\n            className=\"Carousel__image\"\n            key={image}\n            style={{\n              transform: `translateX(${-(currentImage * itemWidth)}px)`,\n              transition: `transform ${animDur}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={`Emoji img ${i + 1}`}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className={\n            prevDisabled\n              ? 'Carousel__btn Carousel__btn--disabled'\n              : 'Carousel__btn Carousel__btn--active'\n          }\n          onClick={goPrev}\n          disabled={prevDisabled}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className={\n            nextDisabled\n              ? 'Carousel__btn Carousel__btn--disabled'\n              : 'Carousel__btn Carousel__btn--active'\n          }\n          onClick={goNext}\n          disabled={nextDisabled}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst DEFAULT_VALUES = {\n  itemWidth: 130,\n  frameSize: 3,\n  step: 3,\n  animDur: 1000,\n};\n\nconst App: React.FC = () => {\n  const [itemWidth, setItemWidth] = useState(DEFAULT_VALUES.itemWidth);\n  const [frameSize, setFrameSize] = useState(DEFAULT_VALUES.frameSize);\n  const [step, setStep] = useState(DEFAULT_VALUES.step);\n  const [animDur, setAnimDur] = useState(DEFAULT_VALUES.animDur);\n  const [infinite, setInfinite] = useState(false);\n  const [currentImage, setCurrentImage] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\" className=\"App__title\">\n        Carousel with\n        {images.length}\n        {' '}\n        images\n      </h1>\n      <div className=\"App__fields\">\n        <label htmlFor=\"itemId\" className=\"App__label\">\n          {'Item Width: '}\n          <input\n            type=\"number\"\n            id=\"item\"\n            className=\"inpt\"\n            value={itemWidth}\n            min={70}\n            max={260}\n            step={10}\n            onChange={(event) => {\n              setItemWidth(+event.target.value);\n              setCurrentImage(0);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"frameId\" className=\"App__label\">\n          {'Frame size: '}\n          <input\n            type=\"number\"\n            id=\"frame\"\n            className=\"inpt\"\n            value={frameSize}\n            min={1}\n            max={images.length}\n            step={1}\n            onChange={(event) => {\n              setFrameSize(+event.target.value);\n              setCurrentImage(0);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"stepId\" className=\"App__label\">\n          {'Step: '}\n          <input\n            type=\"number\"\n            id=\"step\"\n            className=\"inpt\"\n            value={step}\n            min={1}\n            max={frameSize}\n            step={1}\n            onChange={(event) => {\n              setStep(+event.target.value);\n              setCurrentImage(0);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"animDurId\" className=\"App__label\">\n          {'Animation Duration: '}\n          <input\n            type=\"number\"\n            id=\"animDur\"\n            className=\"inpt\"\n            value={animDur}\n            min={500}\n            max={3000}\n            step={250}\n            onChange={(event) => {\n              setAnimDur(+event.target.value);\n              setCurrentImage(0);\n            }}\n          />\n        </label>\n\n        <label htmlFor=\"infiniteId\" className=\"App__label\">\n          Infinite\n          <input\n            type=\"checkbox\"\n            id=\"infinite\"\n            className=\"switcher\"\n            onChange={() => setInfinite(!infinite)}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        animDur={animDur}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        infinite={infinite}\n        currentImage={currentImage}\n        setCurrentImage={setCurrentImage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}